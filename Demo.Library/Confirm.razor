@if (ShowModal)
{
    ////don't forget to add show and d-block classes
    <div class="modal fade show d-block" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel"> @Title</h5>
                    <button type="button" 
                            @onclick="()=> OnConfirmation(false).Wait()"
                            class="close" 
                            data-bs-dismiss="modal" 
                            aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    @Message
                </div>
                <div class="modal-footer">
                    <button type="button" 
                            @onclick="()=> OnConfirmation(false).Wait()"
                            class="btn btn-secondary" 
                            data-bs-dismiss="modal">Cancel</button>
                    <button 
                            type="button" 
                            @onclick="()=> OnConfirmation(true).Wait()"
                            class="btn btn-danger">Delete</button>
                </div>
            </div>
        </div>
    </div>
}

@code{
    public bool ShowModal { get; set; } = false;
    public string Title { get; set; }
    public string Message { get; set; }

    public void Show()
    {
        ShowModal = true;
        StateHasChanged();
    }
    [Parameter]
    public EventCallback<bool> ConfirmationChanged { get; set; }

    private async Task OnConfirmation(bool isConfirmed)
    {
        await ConfirmationChanged.InvokeAsync(isConfirmed);
        ShowModal = false;
    }
}